@page "/category"
@using Shop.DataModels.CustomModels
@using Show.Admin.Services
@inject IAdminPanelService adminPanelService;

@if (categoryModel == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<div class="card">
		<h4 class="card-header">Category</h4>
		<div class="card-body">
			<EditForm Model="@categoryModel" OnValidSubmit="SaveCategory">
				<DataAnnotationsValidator />
				<div class="form-row">
					<div class="form-group col-5">
						<label>Name :</label>
						<InputText @bind-Value="categoryModel.Name" class="form-control"></InputText>
						<ValidationMessage For="@(() => categoryModel.Name)" />
					</div>
				</div>
				<div class="text-left">
					<input type="submit" class="btn btn-primary" value="Save" />
					<input type="button" class="btn btn-primary" value="Clear" @onclick="ClearForm" />
				</div>
			</EditForm>
		</div>
		<div class="card-body bg-dark">
			@if (categoryList == null)
			{
				<p><em>Loading...</em></p>
			}
			else
			{
				<table class="table table-striped table-bordered bg-light">
					<thead>
						<tr>
							<th style="width:15px;">Sr.No</th>
							<th>Category Name</th>
							<th style="width:86px;">Edit?</th>
							<th style="width:80px;">Delete?</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var (index, cat) in categoryList.Select((cat, i) => (i + 1, cat)))
						{
							<tr>
								<td>@index</td>
								<td>@cat.Name</td>
								<td><input type="button" class="btn btn-primary" value="Edit" @onclick="(()=>EditBtnClick(cat))" /></td>
								<td><input type="button" class="btn btn-primary" value="Delete" @onclick="(()=>DeleteBtnClick(cat))" /></td>
							</tr>
						}
					</tbody>
				</table>
			}
		</div>
	</div>
}

@code {
	[CascadingParameter]
	public EventCallback notify { get; set; }//注册MainLayout的通知事件

	public CategoryModel categoryModel { get; set; }
	public List<CategoryModel> categoryList { get; set; } = new List<CategoryModel>();

	public async Task SaveCategory()
	{

	}

	public async Task ClearForm()
	{

	}

	public async Task EditBtnClick(CategoryModel category)
	{

	}
	public async Task DeleteBtnClick(CategoryModel category)
	{

	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			// 当组件第一次渲染后，调用通知事件(确保不会未登录的时候访问此页面)
			await notify.InvokeAsync();
		}
	}
}
